enum NotificationType {
  CHAT_MESSAGE
  ORDER_PLACED
  ORDER_SHIPPED
  MAIL
  SURVEY
}

enum NotificationStatus {
  NOTIFIED
  NOTIFICATION_READ
}

type Notification @model @key(name: "byUser", fields: ["userID"]) @auth(rules: [{allow: private}]) {
  id: ID!
  title: String
  userID: ID
  status: NotificationStatus
  type: NotificationType
  description: String
  Survey: Survey @connection
}

type Response @model @key(name: "bySurvey", fields: ["surveyID"]) @auth(rules: [{allow: private}]) {
  id: ID!
  data: AWSJSON
  surveyID: ID
  User: User @connection
}

type Author @model @auth(rules: [{allow: private}]) {
  id: ID!
  firstName: String
  name: String
  email: String
  avatarUrl: String
}

enum SurveyStatus {
  DONE
  COMPLETED
  IN_PROGRESS
}

type Survey @model @auth(rules: [{allow: private, operations: [create, read, update]}]) {
  id: ID!
  title: String
  surveyCreatedAt: String
  status: SurveyStatus
  surveyUrl: AWSURL
  mediaUrl: AWSURL
  Author: Author @connection
  Responses: [Response] @connection(keyName: "bySurvey", fields: ["id"])
  SurveyUsers: [SurveyUser] @connection(keyName: "bySurvey", fields: ["id"])
}

type User @model @auth(rules: [{allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner, ownerField: "username", operations: [create, read, update]}]) {
  id: ID!
  username: String
  email: String
  name: String
  firstName: String
  dateOfBirth: String
  Notifications: [Notification] @connection(keyName: "byUser", fields: ["id"])
  surveys: [SurveyUser] @connection(keyName: "byUser", fields: ["id"])
}

type SurveyUser @model(queries: null) @key(name: "bySurvey", fields: ["surveyID", "userID"]) @key(name: "byUser", fields: ["userID", "surveyID"]) @auth(rules: [{allow: private, operations: [create, read, update]}, {allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner, ownerField: "username", operations: [create, read, update]}]) {
  id: ID!
  surveyID: ID!
  userID: ID!
  survey: Survey! @connection(fields: ["surveyID"])
  user: User! @connection(fields: ["userID"])
}
 