type Author @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  firstName: String
  name: String
  email: String
  avatarUrl: String
}

enum SurveyStatus {
  DONE
  COMPLETED
  IN_PROGRESS
}

type Survey @model @auth(rules: [{allow: private, operations: [create, read, update]}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  title: String
  surveyCreatedAt: String
  status: SurveyStatus
  surveyUrl: AWSURL
  mediaUrl: AWSURL
  userID: ID
  Author: Author @connection
}

type User @model @auth(rules: [{allow: groups, groups: ["Admin"], operations: [read, create, update, delete]}, {allow: owner, ownerField: "username", operations: [create, read, update]}]) {
  id: ID!
  username: String
  email: String
  name: String
  firstName: String
  dateOfBirth: String
  Surveys: [Survey] @connection(keyName: "byUser", fields: ["id"])
}
 