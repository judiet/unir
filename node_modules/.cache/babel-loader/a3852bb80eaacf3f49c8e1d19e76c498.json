{"ast":null,"code":"import _regeneratorRuntime from\"/home/julian/Dokumente/WhiteCloudContext/material-kit-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/julian/Dokumente/WhiteCloudContext/material-kit-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// AppSync\nimport AWSAppSyncClient,{AUTH_TYPE}from'aws-appsync';//\nimport Amplify,{Auth}from'aws-amplify';import{withAuthenticator}from'@aws-amplify/ui-react';import awsconfig from'./aws-exports';// routes\nimport Router from'./routes';// theme\nimport ThemeConfig from'./theme';import GlobalStyles from'./theme/globalStyles';// components\nimport ScrollToTop from'./components/ScrollToTop';import{BaseOptionChartStyle}from'./components/charts/BaseOptionChart';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Amplify.configure(awsconfig);// jwtToken is used for AWS Cognito.\nvar client=new AWSAppSyncClient({url:awsconfig.aws_appsync_graphqlEndpoint,region:awsconfig.aws_appsync_region,auth:{type:AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,jwtToken:function(){var _jwtToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Auth.currentSession();case 2:return _context.abrupt(\"return\",_context.sent.getIdToken().getJwtToken());case 3:case\"end\":return _context.stop();}}},_callee);}));function jwtToken(){return _jwtToken.apply(this,arguments);}return jwtToken;}()}});function App(){return/*#__PURE__*/_jsxs(ThemeConfig,{children:[/*#__PURE__*/_jsx(ScrollToTop,{}),/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(BaseOptionChartStyle,{}),/*#__PURE__*/_jsx(Router,{})]});}export default withAuthenticator(App);","map":{"version":3,"sources":["/home/julian/Dokumente/WhiteCloudContext/material-kit-react/src/App.js"],"names":["AWSAppSyncClient","AUTH_TYPE","Amplify","Auth","withAuthenticator","awsconfig","Router","ThemeConfig","GlobalStyles","ScrollToTop","BaseOptionChartStyle","configure","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","AMAZON_COGNITO_USER_POOLS","jwtToken","currentSession","getIdToken","getJwtToken","App"],"mappings":"iWAAA;AACA,MAAOA,CAAAA,gBAAP,EAA2BC,SAA3B,KAA4C,aAA5C,CACA;AACA,MAAOC,CAAAA,OAAP,EAAkBC,IAAlB,KAA8B,aAA9B,CACA,OAASC,iBAAT,KAAkC,uBAAlC,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,SAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA;AACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,OAASC,oBAAT,KAAqC,qCAArC,CACA;wFAEAR,OAAO,CAACS,SAAR,CAAkBN,SAAlB,EAEA;AACA,GAAMO,CAAAA,MAAM,CAAG,GAAIZ,CAAAA,gBAAJ,CAAqB,CAClCa,GAAG,CAAER,SAAS,CAACS,2BADmB,CAElCC,MAAM,CAAEV,SAAS,CAACW,kBAFgB,CAGlCC,IAAI,CAAE,CACJC,IAAI,CAAEjB,SAAS,CAACkB,yBADZ,CAEJC,QAAQ,kFAAE,yJAAmBjB,CAAAA,IAAI,CAACkB,cAAL,EAAnB,sDAA0CC,UAA1C,GAAuDC,WAAvD,0DAAF,kFAFJ,CAH4B,CAArB,CAAf,CASA,QAASC,CAAAA,GAAT,EAAe,CACb,mBACE,MAAC,WAAD,yBACE,KAAC,WAAD,IADF,cAEE,KAAC,YAAD,IAFF,cAGE,KAAC,oBAAD,IAHF,cAIE,KAAC,MAAD,IAJF,GADF,CAQD,CAED,cAAepB,CAAAA,iBAAiB,CAACoB,GAAD,CAAhC","sourcesContent":["// AppSync\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\n//\nimport Amplify, { Auth } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\n// routes\nimport Router from './routes';\n// theme\nimport ThemeConfig from './theme';\nimport GlobalStyles from './theme/globalStyles';\n// components\nimport ScrollToTop from './components/ScrollToTop';\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart';\n// ----------------------------------------------------------------------\n\nAmplify.configure(awsconfig);\n\n// jwtToken is used for AWS Cognito.\nconst client = new AWSAppSyncClient({\n  url: awsconfig.aws_appsync_graphqlEndpoint,\n  region: awsconfig.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n    jwtToken: async () => (await Auth.currentSession()).getIdToken().getJwtToken()\n  }\n});\n\nfunction App() {\n  return (\n    <ThemeConfig>\n      <ScrollToTop />\n      <GlobalStyles />\n      <BaseOptionChartStyle />\n      <Router />\n    </ThemeConfig>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}