{"ast":null,"code":"var _jsxFileName = \"/home/julian/Dokumente/material-kit-react/src/App.js\",\n    _s = $RefreshSig$();\n\n// Apollo Settings\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { ApolloLink } from 'apollo-link'; // AppSync\n\nimport { createAuthLink } from 'aws-appsync-auth-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport { Rehydrated } from 'aws-appsync-react'; //\n\nimport Amplify, { Auth, API } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports'; // routes\n\nimport Router from './routes'; // theme\n\nimport ThemeConfig from './theme';\nimport GlobalStyles from './theme/globalStyles'; // components\n\nimport ScrollToTop from './components/ScrollToTop';\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart'; // query\n\nimport * as queries from './graphql/queries';\nimport { useEffect } from 'react'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure(awsconfig); // jwtToken is used for AWS Cognito.\n\nconst client = new AWSAppSyncClient({\n  url: awsconfig.aws_appsync_graphqlEndpoint,\n  region: awsconfig.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n    jwtToken: async () => (await Auth.currentSession()).getIdToken().getJwtToken()\n  }\n});\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    async function getData() {\n      const allTodos = await API.graphql({\n        query: queries.getUser\n      });\n      console.log(allTodos);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ThemeConfig, {\n      children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BaseOptionChartStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/julian/Dokumente/material-kit-react/src/App.js"],"names":["ApolloClient","ApolloProvider","InMemoryCache","ApolloLink","createAuthLink","createHttpLink","AWSAppSyncClient","AUTH_TYPE","Rehydrated","Amplify","Auth","API","withAuthenticator","awsconfig","Router","ThemeConfig","GlobalStyles","ScrollToTop","BaseOptionChartStyle","queries","useEffect","configure","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","AMAZON_COGNITO_USER_POOLS","jwtToken","currentSession","getIdToken","getJwtToken","App","getData","allTodos","graphql","query","getUser","console","log"],"mappings":";;;AAAA;AACA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,gBAAP,IAA2BC,SAA3B,QAA4C,aAA5C;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CACA;;AACA,OAAOC,OAAP,IAAkBC,IAAlB,EAAwBC,GAAxB,QAAmC,aAAnC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,oBAAT,QAAqC,qCAArC,C,CACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,mBAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;;AAEAX,OAAO,CAACY,SAAR,CAAkBR,SAAlB,E,CAEA;;AACA,MAAMS,MAAM,GAAG,IAAIhB,gBAAJ,CAAqB;AAClCiB,EAAAA,GAAG,EAAEV,SAAS,CAACW,2BADmB;AAElCC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,kBAFgB;AAGlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAErB,SAAS,CAACsB,yBADZ;AAEJC,IAAAA,QAAQ,EAAE,YAAY,CAAC,MAAMpB,IAAI,CAACqB,cAAL,EAAP,EAA8BC,UAA9B,GAA2CC,WAA3C;AAFlB;AAH4B,CAArB,CAAf;;AASA,SAASC,GAAT,GAAe;AAAA;;AACbd,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,OAAJ,CAAY;AAAEC,QAAAA,KAAK,EAAEnB,OAAO,CAACoB;AAAjB,OAAZ,CAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACD,KAJa,CAKd;;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEd,MAAxB;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlBQY,G;;KAAAA,G;AAoBT,qBAAetB,iBAAiB,CAACsB,GAAD,CAAhC","sourcesContent":["// Apollo Settings\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { ApolloLink } from 'apollo-link';\n// AppSync\nimport { createAuthLink } from 'aws-appsync-auth-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';\nimport { Rehydrated } from 'aws-appsync-react';\n//\nimport Amplify, { Auth, API } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\n// routes\nimport Router from './routes';\n// theme\nimport ThemeConfig from './theme';\nimport GlobalStyles from './theme/globalStyles';\n// components\nimport ScrollToTop from './components/ScrollToTop';\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart';\n// query\nimport * as queries from './graphql/queries';\nimport { useEffect } from 'react';\n// ----------------------------------------------------------------------\n\nAmplify.configure(awsconfig);\n\n// jwtToken is used for AWS Cognito.\nconst client = new AWSAppSyncClient({\n  url: awsconfig.aws_appsync_graphqlEndpoint,\n  region: awsconfig.aws_appsync_region,\n  auth: {\n    type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,\n    jwtToken: async () => (await Auth.currentSession()).getIdToken().getJwtToken()\n  }\n});\n\nfunction App() {\n  useEffect(() => {\n    async function getData() {\n      const allTodos = await API.graphql({ query: queries.getUser });\n      console.log(allTodos);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <ApolloProvider client={client}>\n      <ThemeConfig>\n        <ScrollToTop />\n        <GlobalStyles />\n        <BaseOptionChartStyle />\n        <Router />\n      </ThemeConfig>\n    </ApolloProvider>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}