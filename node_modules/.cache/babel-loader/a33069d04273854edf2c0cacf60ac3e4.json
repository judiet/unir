{"ast":null,"code":"var _jsxFileName = \"/home/julian/Dokumente/material-kit-react/src/layouts/dashboard/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom'; // material\n\nimport { styled } from '@mui/material/styles'; //\n\nimport Amplify, { Auth, API, graphqlOperation } from 'aws-amplify'; //\n\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar'; // query\n\nimport * as queries from '../../graphql/queries'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APP_BAR_MOBILE = 64;\nconst APP_BAR_DESKTOP = 92;\nconst RootStyle = styled('div')({\n  display: 'flex',\n  minHeight: '100%',\n  overflow: 'hidden'\n});\nconst MainStyle = styled('div')(({\n  theme\n}) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  minHeight: '100%',\n  paddingTop: APP_BAR_MOBILE + 24,\n  paddingBottom: theme.spacing(10),\n  [theme.breakpoints.up('lg')]: {\n    paddingTop: APP_BAR_DESKTOP + 24,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  }\n})); // ----------------------------------------------------------------------\n\nexport default function DashboardLayout() {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [username, setusername] = useState();\n  const [email, setEmail] = useState(); // useEffect(() => {\n  //   async function init() {\n  //     console.log('Effect');\n  //     const rawData = localStorage.getItem('userData');\n  //     let parsedData = {};\n  //     if (rawData) {\n  //       parsedData = JSON.parse(rawData);\n  //       setusername(parsedData.username);\n  //       setEmail(parsedData.email);\n  //     }\n  //   }\n  //   init();\n  // }, []);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({\n      query: queries.listUsers\n    });\n    console.log(apiData.data.listUsers.items[0].email); // localStorage.setItem('userData', JSON.stringify(apiData.data.listUsers.items[0]));\n\n    setusername(apiData.data.listUsers.items[0].username);\n    setEmail(apiData.data.listUsers.items[0].email);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {\n      onOpenSidebar: () => setOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardSidebar, {\n      isOpenSidebar: open,\n      onCloseSidebar: () => setOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainStyle, {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardLayout, \"V8STcGqdVduAZeJHHLaQYWjzb1w=\");\n\n_c = DashboardLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"sources":["/home/julian/Dokumente/material-kit-react/src/layouts/dashboard/index.js"],"names":["useEffect","useState","Outlet","styled","Amplify","Auth","API","graphqlOperation","DashboardNavbar","DashboardSidebar","queries","APP_BAR_MOBILE","APP_BAR_DESKTOP","RootStyle","display","minHeight","overflow","MainStyle","theme","flexGrow","paddingTop","paddingBottom","spacing","breakpoints","up","paddingLeft","paddingRight","DashboardLayout","open","setOpen","username","setusername","email","setEmail","fetchNotes","apiData","graphql","query","listUsers","console","log","data","items"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\n//\nimport Amplify, { Auth, API, graphqlOperation } from 'aws-amplify';\n//\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n// query\nimport * as queries from '../../graphql/queries';\n// ----------------------------------------------------------------------\n\nconst APP_BAR_MOBILE = 64;\nconst APP_BAR_DESKTOP = 92;\n\nconst RootStyle = styled('div')({\n  display: 'flex',\n  minHeight: '100%',\n  overflow: 'hidden'\n});\n\nconst MainStyle = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  overflow: 'auto',\n  minHeight: '100%',\n  paddingTop: APP_BAR_MOBILE + 24,\n  paddingBottom: theme.spacing(10),\n  [theme.breakpoints.up('lg')]: {\n    paddingTop: APP_BAR_DESKTOP + 24,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function DashboardLayout() {\n  const [open, setOpen] = useState(false);\n  const [username, setusername] = useState();\n  const [email, setEmail] = useState();\n\n  // useEffect(() => {\n  //   async function init() {\n  //     console.log('Effect');\n  //     const rawData = localStorage.getItem('userData');\n  //     let parsedData = {};\n  //     if (rawData) {\n  //       parsedData = JSON.parse(rawData);\n  //       setusername(parsedData.username);\n  //       setEmail(parsedData.email);\n  //     }\n  //   }\n  //   init();\n  // }, []);\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function fetchNotes() {\n    const apiData = await API.graphql({ query: queries.listUsers });\n    console.log(apiData.data.listUsers.items[0].email);\n    // localStorage.setItem('userData', JSON.stringify(apiData.data.listUsers.items[0]));\n    setusername(apiData.data.listUsers.items[0].username);\n    setEmail(apiData.data.listUsers.items[0].email);\n  }\n\n  return (\n    <RootStyle>\n      <DashboardNavbar onOpenSidebar={() => setOpen(true)} />\n      <DashboardSidebar isOpenSidebar={open} onCloseSidebar={() => setOpen(false)} />\n      <MainStyle>\n        <Outlet />\n      </MainStyle>\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}