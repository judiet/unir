{"ast":null,"code":"var _jsxFileName = \"/home/julian/Dokumente/material-kit-react/src/App.js\";\nimport Amplify, { Auth } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports'; // routes\n\nimport Router from './routes'; // theme\n\nimport ThemeConfig from './theme';\nimport GlobalStyles from './theme/globalStyles'; // components\n\nimport ScrollToTop from './components/ScrollToTop';\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart'; // ----------------------------------------------------------------------\n// Apollo Settings\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { ApolloLink } from 'apollo-link'; // AppSync\n\nimport { createAuthLink } from 'aws-appsync-auth-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport Client from 'aws-appsync';\nimport { Rehydrated } from 'aws-appsync-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure(awsconfig); // jwtToken is used for AWS Cognito.\n\nconst client2 = new ApolloClient({\n  link: ApolloLink.from([createAuthLink({\n    url: awsconfig.aws_appsync_graphqlEndpoint,\n    region: awsconfig.aws_appsync_region,\n    auth: {\n      type: awsconfig.aws_appsync_authenticationType,\n      apiKey: awsconfig.aws_appsync_apiKey,\n      jwtToken: async () => (await Auth.currentSession()).getAccessToken().getJwtToken()\n    }\n  }), createHttpLink({\n    uri: awsconfig.aws_appsync_graphqlEndpoint\n  })]),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client2,\n    children: /*#__PURE__*/_jsxDEV(Rehydrated, {\n      children: /*#__PURE__*/_jsxDEV(ThemeConfig, {\n        children: [/*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BaseOptionChartStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default _c2 = withAuthenticator(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/julian/Dokumente/material-kit-react/src/App.js"],"names":["Amplify","Auth","withAuthenticator","awsconfig","Router","ThemeConfig","GlobalStyles","ScrollToTop","BaseOptionChartStyle","ApolloClient","ApolloProvider","InMemoryCache","ApolloLink","createAuthLink","createHttpLink","Client","Rehydrated","configure","client2","link","from","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","auth","type","aws_appsync_authenticationType","apiKey","aws_appsync_apiKey","jwtToken","currentSession","getAccessToken","getJwtToken","uri","cache","App"],"mappings":";AAAA,OAAOA,OAAP,IAAiBC,IAAjB,QAA6B,aAA7B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,oBAAT,QAAqC,qCAArC,C,CACA;AACA;;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEAhB,OAAO,CAACiB,SAAR,CAAkBd,SAAlB,E,CAEA;;AACA,MAAMe,OAAO,GAAG,IAAIT,YAAJ,CAAiB;AAC/BU,EAAAA,IAAI,EAAEP,UAAU,CAACQ,IAAX,CAAgB,CACpBP,cAAc,CAAC;AACbQ,IAAAA,GAAG,EAAElB,SAAS,CAACmB,2BADF;AAEbC,IAAAA,MAAM,EAAEpB,SAAS,CAACqB,kBAFL;AAGbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAEvB,SAAS,CAACwB,8BADZ;AAEJC,MAAAA,MAAM,EAAEzB,SAAS,CAAC0B,kBAFd;AAGJC,MAAAA,QAAQ,EAAE,YAAY,CAAC,MAAM7B,IAAI,CAAC8B,cAAL,EAAP,EAA8BC,cAA9B,GAA+CC,WAA/C;AAHlB;AAHO,GAAD,CADM,EAUpBnB,cAAc,CAAC;AAAEoB,IAAAA,GAAG,EAAE/B,SAAS,CAACmB;AAAjB,GAAD,CAVM,CAAhB,CADyB;AAa/Ba,EAAAA,KAAK,EAAE,IAAIxB,aAAJ;AAbwB,CAAjB,CAAhB;;AAgBA,SAASyB,GAAT,GAAe;AACb,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAElB,OAAxB;AAAA,2BACE,QAAC,UAAD;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAbQkB,G;AAeT,qBAAelC,iBAAiB,CAACkC,GAAD,CAAhC","sourcesContent":["import Amplify,{ Auth } from 'aws-amplify';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport awsconfig from './aws-exports';\n// routes\nimport Router from './routes';\n// theme\nimport ThemeConfig from './theme';\nimport GlobalStyles from './theme/globalStyles';\n// components\nimport ScrollToTop from './components/ScrollToTop';\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart';\n// ----------------------------------------------------------------------\n// Apollo Settings\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { ApolloLink } from 'apollo-link';\n// AppSync\nimport { createAuthLink } from 'aws-appsync-auth-link';\nimport { createHttpLink } from 'apollo-link-http';\nimport Client from 'aws-appsync';\nimport { Rehydrated } from 'aws-appsync-react';\n\nAmplify.configure(awsconfig);\n\n// jwtToken is used for AWS Cognito.\nconst client2 = new ApolloClient({\n  link: ApolloLink.from([\n    createAuthLink({\n      url: awsconfig.aws_appsync_graphqlEndpoint,\n      region: awsconfig.aws_appsync_region,\n      auth: {\n        type: awsconfig.aws_appsync_authenticationType,\n        apiKey: awsconfig.aws_appsync_apiKey,\n        jwtToken: async () => (await Auth.currentSession()).getAccessToken().getJwtToken()\n      }\n    }),\n    createHttpLink({ uri: awsconfig.aws_appsync_graphqlEndpoint })\n  ]),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client2}>\n      <Rehydrated>\n        <ThemeConfig>\n          <ScrollToTop />\n          <GlobalStyles />\n          <BaseOptionChartStyle />\n          <Router />\n        </ThemeConfig>\n      </Rehydrated>\n    </ApolloProvider>\n  );\n}\n\nexport default withAuthenticator(App);\n"]},"metadata":{},"sourceType":"module"}